[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-02-26T17:22:36.625Z",
        "before": [
          {
            "result": {
              "duration": 6248000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeTest()"
            }
          }
        ],
        "line": 2,
        "name": "user should be able to login with valid credentials",
        "description": "",
        "id": "login-feature;user-should-be-able-to-login-with-valid-credentials",
        "after": [
          {
            "result": {
              "duration": 749000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 3,
            "name": "user in TalentTek homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTekHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 4,
            "name": "user enter valid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "user enter valid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "user should be able to log in successfully",
            "match": {
              "location": "stepDef.LoginSteps.userShouldBeAbleToLogInSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2023-02-26T17:22:43.700Z",
        "before": [
          {
            "result": {
              "duration": 2738000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeTest()"
            }
          }
        ],
        "line": 10,
        "name": "User should not be able to login with valid email and invalid password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-valid-email-and-invalid-password",
        "after": [
          {
            "result": {
              "duration": 756000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user in TalentTek homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTekHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "user enter valid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "user enter invalid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user should be able to see \" You have entered an incorrect email or student ID.\"",
            "match": {
              "arguments": [
                {
                  "val": "\" You have entered an incorrect email or student ID.\"",
                  "offset": 27
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleToSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@sanity"
          },
          {
            "name": "@hb"
          }
        ]
      },
      {
        "start_timestamp": "2023-02-26T17:22:47.206Z",
        "before": [
          {
            "result": {
              "duration": 2823000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeTest()"
            }
          }
        ],
        "line": 17,
        "name": "User should not be able to login with invalid email and valid password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-invalid-email-and-valid-password",
        "after": [
          {
            "result": {
              "duration": 606000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "user in TalentTek homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTekHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "user enter invalid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user enter valid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user should be able to see \" You have entered an incorrect email or student ID.\"",
            "match": {
              "arguments": [
                {
                  "val": "\" You have entered an incorrect email or student ID.\"",
                  "offset": 27
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleToSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2023-02-26T17:22:50.647Z",
        "before": [
          {
            "result": {
              "duration": 2880000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeTest()"
            }
          }
        ],
        "line": 24,
        "name": "User should not be able to login with invalid email and  password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-invalid-email-and--password",
        "after": [
          {
            "result": {
              "duration": 705000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "user in TalentTek homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTekHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "user enter invalid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "user enter invalid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "user should be able to see \" You have entered an incorrect email or student ID.\"",
            "match": {
              "arguments": [
                {
                  "val": "\" You have entered an incorrect email or student ID.\"",
                  "offset": 27
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleToSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Login Feature",
    "description": "",
    "id": "login-feature",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/login.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-02-26T17:22:54.237Z",
        "before": [
          {
            "result": {
              "duration": 2702000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeTest()"
            }
          }
        ],
        "line": 4,
        "name": "user should be able to create a brand new account with unique email address",
        "description": "",
        "id": "signup-feature;user-should-be-able-to-create-a-brand-new-account-with-unique-email-address",
        "after": [
          {
            "result": {
              "duration": 637000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "user in TalentTek homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTekHomepage()"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@sanity"
          },
          {
            "name": "@hb"
          }
        ]
      }
    ],
    "name": "Signup Feature",
    "description": "",
    "id": "signup-feature",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/signup.feature",
    "tags": []
  }
]